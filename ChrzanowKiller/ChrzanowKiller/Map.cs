using System;
using System.Collections.Generic;
using System.Drawing;

public class Map
{
    public Point Origin { get; set; }
    public Point Size { get; }

    private int[][] mapData;
    private Dictionary<CellType, char> cellVisuals = new Dictionary<CellType, char>
    {
        { CellType.WallCorner, '▓' },
        { CellType.WallHorizontal, '▓' },
        { CellType.WallVertical, '▓' },
        { CellType.Floor, '░' },
        { CellType.Empty, ' ' },
        { CellType.Grass, ',' },
        { CellType.Diamond, '░' },
        { CellType.Shadow, '░'},
        { CellType.BackWall, '▒'},
        { CellType.Door, '█'},
        { CellType.Player, '@'}
    };

    private Dictionary<CellType, ConsoleColor> colorMap = new Dictionary<CellType, ConsoleColor>
    {
        { CellType.WallCorner, ConsoleColor.Blue },
        { CellType.WallHorizontal, ConsoleColor.DarkBlue },
        { CellType.WallVertical, ConsoleColor.DarkBlue },
        { CellType.Floor, ConsoleColor.DarkGray },
        { CellType.Empty, ConsoleColor.DarkGreen },
        { CellType.Grass, ConsoleColor.DarkGreen },
        { CellType.Diamond, ConsoleColor.Cyan },
        { CellType.Shadow, ConsoleColor.Yellow },
        { CellType.BackWall, ConsoleColor.DarkBlue},
        { CellType.Door, ConsoleColor.DarkRed},
        { CellType.Player, ConsoleColor.White}
    };
    public Map()
    {
        // Simplified map data
        mapData = new int[][]
        {
            new [] {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            new [] {0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0},
            new [] {0,2,0,0,2,0,0,9,7,5,5,5,5,5,5,9,7,5,0,0,0,0,5,5,0,0,0,0,5,7,9,2,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0},
            new [] {0,0,1,1,2,0,0,9,7,5,5,5,5,5,5,9,7,5,5,5,5,5,5,5,5,5,5,5,5,7,9,0,0,0,2,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0},
            new [] {0,0,0,0,0,2,0,9,1,1,1,1,1,1,1,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,0,0,0,0,0,0,0,0,0,0,9,7,0,0,5,0,0,5,0,0,5,0,0,7,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            new [] {0,0,0,0,0,0,0,9,1,1,1,1,1,1,1,9,1,1,4,4,4,4,1,1,4,4,4,4,1,1,9,0,0,0,0,0,2,0,0,0,0,9,7,0,0,5,0,0,5,0,0,5,0,0,7,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            new [] {0,0,0,0,0,0,0,9,1,1,1,1,1,1,1,1,1,1,4,4,4,4,1,1,4,4,4,4,1,1,9,0,0,0,0,0,0,0,0,0,0,9,7,5,5,5,5,5,5,5,5,5,5,5,7,9,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0},
            new [] {0,2,0,0,0,0,0,9,1,1,1,1,1,1,1,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,0,2,0,0,0,0,0,0,0,0,9,1,1,1,1,1,1,1,1,1,1,1,1,1,9,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            new [] {0,0,0,0,0,0,0,9,1,1,1,1,1,1,1,9,1,1,1,9,8,8,8,8,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,1,4,4,1,4,4,3,4,4,1,4,4,1,9,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0},
            new [] {0,0,0,0,9,8,8,8,8,8,8,8,8,8,8,9,1,1,1,9,7,5,7,9,1,9,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,9,1,4,4,1,4,3,1,4,4,1,4,4,1,9,0,0,9,7,0,0,0,5,5,0,0,0,5,5,0,0,0,5,5,0,0,0,7,9,0,2,0,0,0,0,0,0,0},
            new [] {0,0,0,0,9,7,5,5,5,5,5,5,5,5,7,9,1,1,1,9,7,5,7,9,1,9,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,9,1,4,4,1,4,4,1,4,4,1,4,4,1,9,0,0,9,7,0,0,0,5,5,0,0,0,5,5,0,0,0,5,5,0,0,0,7,9,0,0,0,0,0,0,0,0,0},
            new [] {0,0,0,2,9,7,5,5,5,5,5,5,5,5,7,9,1,1,1,9,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,9,1,1,1,1,1,1,1,1,1,1,1,1,1,9,0,0,9,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,9,8,8,8,0,0,0,0,0,0},
            new [] {0,0,0,0,9,1,1,1,1,1,1,1,1,1,1,9,1,1,1,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1,8,8,8,8,8,8,8,8,8,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,5,5,9,0,0,0,0,0,0},
            new [] {0,0,0,0,9,1,1,1,3,1,1,1,1,1,1,9,1,1,1,9,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,9,1,9,7,5,5,5,5,5,5,7,9,1,4,4,4,1,1,4,4,4,1,1,4,4,4,1,1,4,4,4,1,9,5,5,9,0,0,0,0,0,0},
            new [] {0,2,0,0,9,1,1,3,1,1,1,1,1,1,1,9,1,1,1,9,7,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7,9,1,9,7,5,5,5,5,5,5,7,9,1,4,4,4,1,1,4,4,4,1,1,4,4,4,1,1,4,4,4,1,9,5,5,9,0,0,0,0,0,0},
            new [] {0,0,0,0,9,1,1,3,3,1,1,1,1,1,1,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,4,1,1,4,4,4,1,1,4,4,4,1,1,4,4,4,1,1,1,1,1,0,0,0,0,0,0},
            new [] {0,0,0,0,9,1,1,3,1,1,1,1,1,1,1,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1},
            new [] {0,0,0,0,9,1,1,1,1,1,1,1,1,1,1,9,1,1,1,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1,8,8,8,8,9,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,8,8,8,0,0,0,2,0,0},            
            new [] {0,0,0,0,9,1,3,1,3,1,1,1,1,1,1,9,1,1,1,9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,9,5,5,5,5,5,5,5,5,5,5,5,5,5,9,5,5,7,9,1,9,7,5,5,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,5,5,5,0,0,0,0,0,0},
            new [] {0,0,2,0,9,1,1,1,1,1,1,1,1,1,1,9,1,1,1,9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,9,5,5,5,5,5,9,8,8,8,8,8,8,8,9,5,5,7,9,1,9,7,5,5,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,5,5,5,0,0,0,0,0,0},
            new [] {0,0,0,0,9,8,8,8,8,8,8,8,8,8,8,9,1,1,1,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,0,0,0,0,0,9,5,5,5,5,5,5,5,9,1,1,1,1,1,1,1,1,1,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,5,5,5,0,2,0,0,0,0},
            new [] {0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,9,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,9,0,0,0,0,2,9,5,5,5,5,5,5,5,9,1,1,1,1,1,1,1,1,1,9,5,1,1,1,5,5,1,1,1,5,5,1,1,1,5,5,1,1,1,5,5,0,0,0,0,0,0,0,0,0},
            new [] {0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,9,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,9,0,0,2,0,0,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,5,1,1,1,5,5,1,1,1,5,5,1,1,1,5,5,1,1,1,5,5,0,0,0,0,0,0,0,0,0},            
            new [] {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,1,1,9,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,0,0,0,0,0,9,1,1,1,3,1,1,1,9,1,1,1,1,1,1,1,1,1,9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,2,0,0},
            new [] {0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,9,1,1,1,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,0,0,0,0,0,9,1,1,1,1,3,1,1,9,1,1,1,1,1,1,1,1,1,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            new [] {0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,1,1,9,5,5,5,1,1,1,1,5,1,1,1,1,5,5,5,0,0,0,0,0,9,8,8,8,8,8,8,8,9,1,1,1,1,1,1,1,1,1,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0},
            new [] {0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,9,1,1,1,9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,5,5,5,9,8,8,8,8,8,8,8,8,8,9,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0},
            new [] {0,0,0,2,1,1,0,2,0,0,0,0,0,0,0,9,8,8,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},            
            new [] {0,2,0,1,2,1,1,1,0,0,0,0,0,0,0,5,5,5,5,5,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0},
            new [] {0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
            new [] {0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0},
            new [] {0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0},                                    
            new [] {0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0},
            new [] {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
        };

        int y = mapData.Length;
        int x = 0;

        foreach (int[] row in mapData)
        {
            if (row.Length > x)
            {
                x = row.Length;
            }
        }

        Size = new Point(x, y);
        Origin = new Point(0, 0);
    }

    public void Display(Point playerPosition)
    {
        Console.CursorTop = Origin.Y;
        for (int y = 0; y < mapData.Length; y++)
        {
            Console.CursorLeft = Origin.X;
            for (int x = 0; x < mapData[y].Length; x++)
            {
                var cellValue = GetCellAt(x, y);
                var cellVisual = cellVisuals[cellValue];
                var cellColor = colorMap[cellValue];
                Console.ForegroundColor = cellColor;
                if (x == playerPosition.X && y == playerPosition.Y)
                {
                    Console.Write('@');  // Draw the player
                }
                else
                {
                    Console.Write(cellVisual);
                }
                Console.ResetColor();
            }
            Console.WriteLine();
        }
    }

    public CellType GetCellAt(int x, int y)
    {
        return (CellType)mapData[y][x];
    }
}
